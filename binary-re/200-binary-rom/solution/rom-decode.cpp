// rom-decode.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>

/* C:\Users\vold\Desktop\200-bsides-pdx-rom.bin (10/6/2022 12:29:25 PM)
   StartOffset(h): 00000000, EndOffset(h): 000001FF, Length(h): 00000200 */

unsigned char d[512] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x00, 0xC1, 0x01, 0x00, 0x00,
	0x00, 0x88, 0x00, 0x21, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x08, 0x04, 0x21,
	0xC3, 0x02, 0x00, 0x00, 0x82, 0x8C, 0x20, 0x20, 0x43, 0x02, 0x00, 0x00,
	0x82, 0x04, 0x05, 0x00, 0x00, 0x40, 0x00, 0x00, 0x82, 0x80, 0x00, 0x20,
	0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x01,
	0xC3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x01, 0x20, 0x00,
	0xA2, 0x00, 0x10, 0x9C, 0x00, 0x02, 0x18, 0x11, 0x00, 0x48, 0x00, 0x19,
	0x84, 0x00, 0x18, 0xC0, 0x20, 0x04, 0x21, 0x11, 0x43, 0x61, 0x04, 0x44,
	0x11, 0x40, 0x01, 0x05, 0x08, 0x01, 0x00, 0x00, 0x82, 0x80, 0x05, 0x05,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x40, 0xC0, 0x10, 0xC3, 0x00, 0x00, 0x00, 0x82, 0x40, 0x90, 0x08,
	0x00, 0x01, 0x38, 0x00, 0x20, 0x30, 0xC0, 0x40, 0x00, 0x03, 0x00, 0x51,
	0x00, 0x68, 0x88, 0xD3, 0x00, 0x21, 0x24, 0x80, 0x21, 0x4C, 0xAA, 0x43,
	0xC1, 0x61, 0x1C, 0x04, 0x11, 0x68, 0x81, 0x0B, 0x08, 0x00, 0x00, 0x00,
	0x00, 0xE0, 0x10, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x08, 0x40,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0xC1, 0x00, 0x00, 0x00,
	0x82, 0x00, 0x09, 0x08, 0x13, 0x56, 0x39, 0x00, 0x20, 0x50, 0x10, 0x49,
	0x39, 0x6B, 0x84, 0x59, 0x09, 0x03, 0x02, 0x1B, 0x3D, 0x49, 0xA0, 0x88,
	0x28, 0x47, 0x00, 0xD9, 0xE8, 0x70, 0x1D, 0x04, 0x11, 0x4F, 0xB1, 0x92,
	0x08, 0x04, 0x00, 0x00, 0x00, 0x80, 0x04, 0x9A, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xE0, 0x2C, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x10,
	0xD1, 0x40, 0x00, 0x00, 0x82, 0x80, 0x10, 0x00, 0x69, 0x1E, 0x39, 0x51,
	0x29, 0x43, 0x00, 0x41, 0x43, 0x03, 0x20, 0x51, 0x00, 0x00, 0x0B, 0x52,
	0x47, 0x01, 0x00, 0xD1, 0x20, 0x44, 0x5C, 0x49, 0x90, 0x78, 0x9D, 0x0C,
	0x19, 0x84, 0x28, 0xC2, 0x08, 0x04, 0x00, 0x00, 0x00, 0x4B, 0xE8, 0x0A,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x0C, 0x48, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x10, 0xD1, 0x40, 0x00, 0x00, 0x82, 0x00, 0x28, 0x00,
	0x18, 0x1D, 0x39, 0x04, 0x28, 0x53, 0x0A, 0x41, 0x30, 0x03, 0xA0, 0x5D,
	0x11, 0x43, 0x88, 0x46, 0x34, 0x05, 0x80, 0x8C, 0x31, 0x4F, 0x80, 0x5A,
	0x93, 0x79, 0x9D, 0x0C, 0x9B, 0x0B, 0x0C, 0x8A, 0x08, 0x04, 0x00, 0x00,
	0x82, 0x63, 0xA5, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x08,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x09, 0x00, 0xD3, 0x41, 0x00, 0x04,
	0x00, 0x50, 0x0A, 0x10, 0x08, 0x1C, 0xB9, 0x08, 0x9A, 0x8B, 0x09, 0x00,
	0x00, 0x02, 0x00, 0x51, 0x00, 0x58, 0x04, 0x10, 0x84, 0x04, 0x20, 0x80,
	0x00, 0x0C, 0x0C, 0x10, 0x23, 0x78, 0x9D, 0x0C, 0x19, 0x20, 0x00, 0x11,
	0x08, 0x05, 0x00, 0x00, 0x82, 0x20, 0x8C, 0x09, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x00,
	0xC1, 0x81, 0x42, 0x22, 0x44, 0x10, 0x08, 0x00, 0xB3, 0xC0, 0x62, 0x26,
	0x74, 0x00, 0x02, 0x00, 0xBB, 0xDE, 0xDB, 0x6E, 0xCE, 0x07, 0x00, 0x00,
	0x3F, 0xDE, 0xFB, 0xBF, 0xEE, 0x07, 0x30, 0x00, 0x08, 0xE4, 0xC6, 0x3F,
	0xD7, 0x03, 0x20, 0x00, 0x08, 0x81, 0x42, 0x22, 0x44, 0x00, 0x26, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00
};

char bits[1024];


int main()
{
	int col_size = 8;
	int row_size = 512;

	for (int r = 0; r < ( sizeof(d) * 8 ) / row_size; r++)
	{
		memset(bits, 0, sizeof(1024));
		
		for (int c = 0; c < col_size; c++)
		{
			for (int i = 0; i < row_size / col_size; i++)
			{
				int bit_pos = i + c * ( row_size / col_size );
				bits[c + i * 8] = _bittest((const long*)&d[r * 512 / 8], bit_pos) ? '1' : '0';
			}
		}
		printf("%s\n", bits );		
	}    
}
